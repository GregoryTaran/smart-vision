import { onRequest } from "firebase-functions/v2/https";
import { ENV } from "./config.js";
import admin from "firebase-admin";
import { Storage } from "@google-cloud/storage";

admin.initializeApp();
const storage = new Storage();

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
 */
export const ask = onRequest(async (req, res) => {
  res.json({
    ok: true,
    message: "Smart Vision Function Works üöÄ",
    hasOpenAI: !!ENV("OPENAI_API_KEY")
  });
});

/**
 * –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ users.json (–≤ Firebase Storage)
 */
export const saveUser = onRequest(async (req, res) => {
  try {
    const bucket = storage.bucket("smart-vision-888.firebasestorage.app");
    const file = bucket.file("users.json");

    // —á–∏—Ç–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    let users = [];
    try {
      const [content] = await file.download();
      users = JSON.parse(content.toString());
    } catch {
      users = [];
    }

    // –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const user = {
      name: req.body.name || "Anonymous",
      email: req.body.email || null,
      createdAt: new Date().toISOString()
    };
    users.push(user);

    // —Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—Ä–∞—Ç–Ω–æ
    await file.save(JSON.stringify(users, null, 2), {
      contentType: "application/json"
    });

    res.json({ ok: true, user });
  } catch (error) {
    console.error("saveUser error:", error);
    res.status(500).json({ ok: false, error: error.message });
  }
});
