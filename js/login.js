import { userStorage } from "./user.js";

document.addEventListener("DOMContentLoaded", () => {
  const form = document.getElementById("loginForm");
  const nameInput = document.getElementById("name");
  const emailInput = document.getElementById("email");

  const existing = userStorage.get();
  if (existing && existing.isLoggedIn) {
    window.location.href = "/html/dashboard.html";
    return;
  }

  form.addEventListener("submit", async (e) => {
    e.preventDefault();

    const email = emailInput.value.trim();
    const name = nameInput.value.trim().slice(0, 30);

    try {
      // üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
      const check = await fetch("https://us-central1-smart-vision-888.cloudfunctions.net/checkUser", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ email }),
      });
      const result = await check.json();

      if (result.exists) {
        console.log("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω:", result.user);
      } else {
        console.log("–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —Å–æ–∑–¥–∞—ë–º –∑–∞–ø–∏—Å—å...");
        await fetch("https://us-central1-smart-vision-888.cloudfunctions.net/saveUser", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ email, name }),
        });
      }

      // üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ
      const user = {
        email,
        name: name || result.user?.name || "Anonymous",
        isLoggedIn: true,
        updatedAt: new Date().toISOString(),
      };
      userStorage.save(user);
      window.location.href = "/html/dashboard.html";
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:", err);
      alert("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.");
    }
  });
});
